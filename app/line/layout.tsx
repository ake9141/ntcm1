// app/lift/layout.tsx
import { cookies } from 'next/headers'
import { redirect } from 'next/navigation'
import Image from "next/image"
import { X } from "lucide-react"
import Link from "next/link"
import { createClient } from "@/lib/supabase/server";

export default async function LiftLayout({ children }: { children: React.ReactNode }) {
  // ‡∏à‡∏≥‡∏•‡∏≠‡∏á user ‡∏à‡∏≤‡∏Å cookies ‡∏´‡∏£‡∏∑‡∏≠ database
const supabase = await createClient();

  const { data, error } = await supabase.auth.getUser();
  if (error || !data?.user) {
    redirect("/auth/login");
  }

  const user = data.user;


  const isLoggedIn = true // ‡∏´‡∏£‡∏∑‡∏≠‡∏î‡∏∂‡∏á‡∏à‡∏≤‡∏Å cookie/session
  if (!isLoggedIn) redirect('/')

  return (
    <div className="min-h-screen flex flex-col bg-white text-black dark:bg-gray-900 dark:text-white">
      {/* Header ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û */}
      <div className="relative">
        <Image
          src="https://cdn.vectorstock.com/i/2000v/06/02/electro-automobile-refuels-accumulator-vector-55600602.avif"
          alt="EV Car"
          width={800}
          height={300}
          className="w-full h-48 object-cover"
        />
        <Link
          href="/"
          className="absolute top-2 right-2 bg-black/50 rounded-full p-1 text-white"
        >
          <X className="w-5 h-5" />
        </Link>
        <span className="absolute bottom-2 left-2 bg-green-600 text-white px-2 py-0.5 text-xs rounded">
          OPEN till 22:30
        </span>
      </div>

      {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å */}
     <header className="flex flex-col gap-1 px-4 py-3 border-b border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-800">
  <h1 className="text-lg font-bold text-blue-600">{user.user_metadata?.name || "‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠"}</h1>
  
  <p className="text-sm text-gray-600">
    {user.user_metadata?.neta_membership_id
      ? `‡∏£‡∏´‡∏±‡∏™‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å NETA: ${user.user_metadata.neta_membership_id}`
      : "‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å NETA"}
  </p>

  <p className="text-sm text-gray-500">
    ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å:{" "}
    <span className={user.user_metadata?.is_neta_member ? "text-green-600" : "text-red-500"}>
      {user.user_metadata?.is_neta_member ? "‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å" : "‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å"}
    </span>
  </p>

  {user.user_metadata?.ppda_consent_given && (
    <div className="text-sm text-gray-500">
      ‚úÖ ‡πÉ‡∏´‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏¥‡∏ô‡∏¢‡∏≠‡∏°‡∏ï‡∏≤‡∏° PDPA ‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏°‡∏∑‡πà‡∏≠{" "}
      <span className="text-blue-600">
        {new Date(user.user_metadata.ppda_consent_timestamp).toLocaleDateString("th-TH")}
      </span>
    </div>
  )}

  <div className="flex items-center gap-2 text-sm mt-1">
    <span className="text-indigo-600 font-medium">UID:</span>
    <span className="text-gray-400 truncate">{user.id}</span>
    <button className="ml-auto text-blue-500 text-sm">‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</button>
  </div>
</header>

      {/* ‡∏Ç‡πà‡∏≤‡∏ß‡∏™‡∏≤‡∏£‡∏à‡∏≤‡∏Å NETA */}
      <div className="flex items-center justify-between p-4 bg-yellow-50 text-yellow-700 text-sm">
        <div>
          <p className="font-medium">üì¢ ‡∏Ç‡πà‡∏≤‡∏ß‡∏™‡∏≤‡∏£‡∏à‡∏≤‡∏Å‡πÄ‡∏Ñ‡∏£‡∏∑‡∏≠‡∏Ç‡πà‡∏≤‡∏¢‡∏ú‡∏π‡πâ‡∏ö‡∏£‡∏¥‡πÇ‡∏†‡∏Ñ</p>
          <p className="text-xs">‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏£‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô ‡∏Å‡∏£‡∏ì‡∏µ‡∏£‡∏ñ EV NETA</p>
        </div>
        <Link href="/complaints" className="bg-yellow-600 text-white px-3 py-1 rounded">
          ‡∏î‡∏π
        </Link>
      </div>

      {/* Tabs */}
      <div className="flex overflow-x-auto border-b text-sm font-medium">
        {["‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå", "‡∏£‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô"].map((tab, index) => (
          <button
            key={tab}
            className={`px-4 py-2 whitespace-nowrap border-b-2 ${index === 0 ? "border-black" : "border-transparent text-gray-500"}`}
          >
            {tab}
          </button>
        ))}
      </div>

      {/* Main Content */}
      <main className="flex-1 overflow-y-auto px-4 py-4">
        {children}
      </main>
       {/* Footer Checkout */}
      <footer className="fixed bottom-0 left-0 right-0 bg-white border-t px-4 py-3 flex items-center justify-between">
        <div className="flex items-center gap-2">
                 </div>
        <button className="bg-green-600 text-white px-6 py-2 rounded-full font-semibold">
        ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        </button>
      </footer>
    </div>
   
  )
}